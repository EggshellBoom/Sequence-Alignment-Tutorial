{"version":3,"sources":["Local.png","InputSequence.js","SelectRecurence.js","Recurrence.js","InitializeTable.js","DirectionAnim.js","SelectDirection.js","FinishTable.js","BacktraceAnim.js","BackTrace.js","FinalAlignment.js","App.js","serviceWorker.js","index.js","Global.png","Fitting.png"],"names":["module","exports","__webpack_require__","p","InputSequence","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlescore","val","key","key1","score_matrix","state","toUpperCase","parseInt","setState","Alignment","sequence1","sequence2","sequence1_str","sequence2_str","AA","AT","AC","AG","TA","TT","TC","TG","CA","CT","CC","CG","GA","GT","GC","GG","GAP","_this2","submit_seqence","react_default","a","createElement","className","onSubmit","event","console","log","target","value","preventDefault","onChange","e","required","title","pattern","split","flat","type","min","max","Component","SelectRecurence","handleSelect","selected_Alignment","_this$props","submit_recurrence","correct_1","correct_2","correct_3","alert","concat","backgroud","onClick","src","glocal_rec","width","height","fitting_rec","local_rec","Recurrence","_ref","InitializeTable","handleTable","x","y","new_table","dp_table","check","i","j","dp_table_global","dp_table_local","dp_table_fitting","length","_this$props2","subtable_title","map","sq1","table","row","cell","disabled","src_Recurrence","submit_initialization","DirectionAnim","myElement","myTween","TimelineMax","repeat","from","to","color","ref","div","SelectDirection","direction","submit_direction","idx","Math","floor","random","DownRight","RightDown","UpLeft","LeftUp","RightUp","UpRight","DownLeft","LeftDown","LeftDown_table","src_DirectionAnim","DownLeft_table","UpRight_table","RightUp_table","LeftUp_table","DownRight_table","RightDown_table","table_list","FinishTable","_this$props3","readonly","submit_finish","BacktraceAnim","clickable","clicked","BackTrace","handleRestart","empty","JSON","parse","stringify","first_click","last_clicked","handleClick","_this$state","first_clicked","backtrace_fitting","backtrace_global","backtrace_local","_this$state2","some","array1","every","index","flag","handleSubmit","submit_backtrace","_this$state3","src_BacktraceAnim","Array","fill","FinalAlignment","handleAlign","new_alignment","Alignment1","Alignment2","ans_Alignment1","ans_Alignment2","seqencecheck","finished","rotation","fontSize","AlignmentTable","App","GetAlignment","current_click","push","MapDirections","n","GlobalAlignment","global_dp_table","backtrace","FittingAlignment","fitting_dp_table","LocalAlignment","local_dp_table","handleNext","current_step","allowed_step","next_step","handlePrev","next_alloed_step","src_InputSequence","src_SelectRecurence","src_InitializeTable","src_SelectDirection","src_FinishTable","src_BackTrace","src_FinalAlignment","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81683a01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Local.360dfd5b.png\";","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass InputSequence extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        Alignment:\"Global Alignment\",\r\n        sequence1 : [],\r\n        sequence2 : [],\r\n        sequence1_str : \"\",\r\n        sequence2_str : \"\",\r\n        score_matrix: {\r\n          AA:1,\r\n          AT:-1,\r\n          AC:-1,\r\n          AG:-1,\r\n          TA:-1,\r\n          TT:1,\r\n          TC:-1,\r\n          TG:-1,\r\n          CA:-1,\r\n          CT:-1,\r\n          CC:1,\r\n          CG:-1,\r\n          GA:-1,\r\n          GT:-1,\r\n          GC:-1,\r\n          GG:1,\r\n          GAP:-1\r\n        }\r\n      };\r\n  }\r\n  \r\n  handlescore = (val,key,key1) =>{\r\n    const{score_matrix} = this.state\r\n    score_matrix[key.toUpperCase()] = parseInt(val)\r\n    score_matrix[key1.toUpperCase()] = parseInt(val)\r\n    this.setState({\r\n      score_matrix:score_matrix\r\n    })\r\n  }\r\n  \r\n  \r\n    render() {\r\n  \r\n      const {submit_seqence} = this.props\r\n      const DNARegex = \"[CAGTcagt]+\"\r\n     \r\n      return (\r\n        <div className=\"App\">\r\n          <h2>Alignment Method, Sequence & Score Matrix </h2>\r\n  \r\n          <form className = \"input-form\" onSubmit = {(event) => { \r\n            console.log(event.target.value); event.preventDefault(); \r\n            submit_seqence(this.state.sequence1,\r\n              this.state.sequence2,this.state.score_matrix,this.state.Alignment)\r\n            }  }>\r\n          \r\n          <div className = \"divider\">\r\n  \r\n           <select  onChange={(e) => {this.setState({Alignment:e.target.value})}}>\r\n            <option>Global Alignment</option>\r\n            <option>Fitting Alignment</option>\r\n            <option>Local Alignment</option>\r\n          </select>\r\n  \r\n          <div className = \"divider_1\">\r\n          Sequence 1\r\n          <input required  \r\n                  title=\"DNA string, please only input CAGT\"\r\n                  pattern={DNARegex}  \r\n                  value={this.state.sequence1_str} \r\n                  onChange={(e) => {\r\n                     this.setState({\r\n                      sequence1_str:e.target.value.toUpperCase(),\r\n                      sequence1:[\"\",\"\",e.target.value.toUpperCase().split(\"\")].flat()\r\n                     })\r\n                  }} \r\n               />\r\n          <br/>\r\n          Sequence 2          \r\n          <input required  \r\n                  title=\"DNA string, please only input CAGT\"\r\n                  pattern={DNARegex}  \r\n                  value={this.state.sequence2_str} \r\n                  onChange={(e) => {\r\n                     this.setState({\r\n                      sequence2_str:e.target.value.toUpperCase(),\r\n                      sequence2:[\"\",e.target.value.toUpperCase().split(\"\")].flat()\r\n                     })\r\n                  }} \r\n               />\r\n          </div>\r\n         \r\n          \r\n          <table>\r\n          <tr>\r\n          <th></th>\r\n          <th>A</th>\r\n          <th>T</th>\r\n          <th>C</th>\r\n          <th>G</th>\r\n          </tr>\r\n          <tr>\r\n          <th>A</th>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.AA}  min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"AA\",\"AA\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.AT} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"at\",\"ta\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.AC} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"ac\",\"ca\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.AG} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"ag\",\"ga\")}} /></td>\r\n          </tr>\r\n          <tr>\r\n          <th>T</th>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.TA} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"ta\",\"at\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.TT} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"tt\",\"tt\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.TC} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"tc\",\"ct\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.TG} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"tg\",\"gt\")}} /></td>\r\n          </tr>\r\n          <tr>\r\n          <th>C</th>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.CA} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"ca\",\"ac\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.CT} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"ct\",\"tc\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.CC} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"cc\",\"cc\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.CG} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"cg\",\"gc\")}} /></td>\r\n          </tr>\r\n          <tr>\r\n          <th>G</th>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.GA} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"ga\",\"ag\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.GT} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"gt\",\"tg\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.GC} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"gc\",\"cg\")}} /></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.GG} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"gg\",\"gg\")}} /></td>\r\n          </tr>\r\n          <tr>\r\n          <th>GAP</th>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n          <td><input type=\"number\" value = {this.state.score_matrix.GAP} min=\"-50\" max=\"50\" onChange={(e) => { this.handlescore(e.target.value,\"GAP\")}} /></td>\r\n          </tr>\r\n         \r\n          </table>\r\n          \r\n         \r\n  \r\n          </div>\r\n          \r\n         \r\n  \r\n           <input type = \"submit\" className = \"submit-button\"/>\r\n          </form>\r\n      \r\n       \r\n  \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  \r\nexport default InputSequence;","import React, { Component } from 'react';\r\nimport glocal_rec from './Global.png';\r\nimport fitting_rec from './Fitting.png';\r\nimport local_rec from './Local.png';\r\nimport './App.css';\r\n\r\nclass SelectRecurence extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        correct_1: false,     \r\n        correct_2: false,     \r\n        correct_3: false   \r\n      };\r\n  }\r\n  \r\n    handleSelect = (selected_Alignment) =>{\r\n      const{Alignment,submit_recurrence} = this.props\r\n  \r\n      if (selected_Alignment === Alignment){\r\n        if(Alignment === \"Global Alignment\"){\r\n          this.setState({\r\n            correct_1: true,     \r\n            correct_2: false,     \r\n            correct_3: false   \r\n          })\r\n        }\r\n        else if(Alignment === \"Fitting Alignment\"){\r\n          this.setState({\r\n            correct_1: false,     \r\n            correct_2: true,     \r\n            correct_3: false   \r\n          })\r\n        }\r\n        else if(Alignment === \"Local Alignment\"){\r\n          this.setState({\r\n            correct_1: false,     \r\n            correct_2: false,     \r\n            correct_3: true   \r\n          })\r\n        }\r\n        alert(\"Awesome! You are correct! Now you can click the Next button to proceed!\")\r\n        submit_recurrence()\r\n  \r\n      }\r\n  \r\n      else{\r\n        alert(`The recurrence you chose is not ${Alignment}, click on the question mark if you need more info.`)\r\n      }\r\n    }\r\n    render() {\r\n      const{Alignment} = this.props\r\n  \r\n  \r\n      return (\r\n        <div className=\"App\">\r\n          <h3>Step1: Choose The Correct Recurrence For </h3>\r\n          <h2> {Alignment}  </h2>\r\n          <div className = \"divider_1\">\r\n  \r\n          <div className = \"select_window\" backgroud>\r\n          <button onClick = {() => {this.handleSelect(\"Global Alignment\")}}> Select </button>\r\n          <img src={glocal_rec} width=\"500\" height=\"120\" />\r\n          <h1 className = {this.state.correct_1 ? \"green_smile\" : \"\"} >: )</h1>\r\n          </div>\r\n  \r\n          <div className = \"select_window\">\r\n          <button onClick = {() => {this.handleSelect(\"Fitting Alignment\")}}> Select </button>\r\n          <img src={fitting_rec} width=\"500\" height=\"150\" />\r\n          <h1 className = {this.state.correct_2 ? \"green_smile\" : \"\"} >: )</h1>\r\n          </div>\r\n  \r\n          <div className = \"select_window\">\r\n          <button onClick = {() => {this.handleSelect(\"Local Alignment\")}}> Select </button>\r\n          <img src={local_rec} width=\"500\" height=\"150\" />\r\n          <h1 className = {this.state.correct_3 ? \"green_smile\" : \"\"} >: )</h1>\r\n          </div>\r\n          </div>\r\n      \r\n       \r\n  \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default SelectRecurence;","import React, { Component } from 'react';\r\nimport glocal_rec from './Global.png';\r\nimport fitting_rec from './Fitting.png';\r\nimport local_rec from './Local.png';\r\nimport './App.css';\r\n\r\nconst Recurrence = ({Alignment}) =>{\r\n    if(Alignment === \"Global Alignment\")\r\n      return (<img className = \"recurrence\" src={glocal_rec} width=\"500\" height=\"120\" />)\r\n    else if(Alignment === \"Fitting Alignment\")\r\n      return (<img className = \"recurrence\" src={fitting_rec} width=\"500\" height=\"150\" />)\r\n    else if(Alignment === \"Local Alignment\")\r\n      return (<img className = \"recurrence\" src={local_rec} width=\"500\" height=\"150\" />)\r\n    else\r\n      return(<div/>)\r\n  }\r\n\r\nexport default Recurrence;","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Recurrence from './Recurrence.js'\r\nclass InitializeTable extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        dp_table:[]\r\n      };\r\n  }\r\n  \r\n  static getDerivedStateFromProps(props, state){\r\n   if(props.dp_table !== state.dp_table){\r\n     return {dp_table:props.dp_table};\r\n   }\r\n  }\r\n  \r\n    componentDidMount() {\r\n      const{dp_table} = this.props\r\n      this.setState({\r\n        dp_table:dp_table\r\n      })\r\n    }\r\n  \r\n    handleTable = (val,x,y)=>{\r\n      var new_table = this.state.dp_table\r\n      new_table[x][y] = parseInt(val)\r\n      this.setState({\r\n        dp_table:new_table\r\n      })\r\n    }\r\n  \r\n    check = () =>{\r\n      const{Alignment,dp_table_global,dp_table_local,dp_table_fitting} = this.props\r\n      const{dp_table} = this.state\r\n      var i,j\r\n      if(Alignment === \"Global Alignment\"){\r\n        for(j = 0; j<dp_table.length; j ++ ){\r\n          for(i=0; i<dp_table[j].length; i++){\r\n            if(dp_table[j][i] !== null && dp_table[j][i] !== dp_table_global[j][i]){\r\n              alert(\"Your initialization is not correct,click the question mark for more info!\")\r\n              return false\r\n            }\r\n          }\r\n        }\r\n        alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n        return true\r\n      }\r\n  \r\n      if(Alignment === \"Fitting Alignment\"){\r\n        for(j = 0; j<dp_table.length; j ++ ){\r\n          for(i=0; i<dp_table[j].length; i++){\r\n            if(dp_table[j][i] !== null && dp_table[j][i] !== dp_table_fitting[j][i]){\r\n              alert(\"Your initialization is not correct,click the question mark for more info!\")\r\n              return false\r\n            }\r\n          }\r\n        }\r\n        alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n        return true\r\n      }\r\n  \r\n      if(Alignment === \"Local Alignment\"){\r\n        for(j = 0; j<dp_table.length; j ++ ){\r\n          for(i=0; i<dp_table[j].length; i++){\r\n            if(dp_table[j][i] !== null && dp_table[j][i] !== dp_table_local[j][i]){\r\n              alert(\"Your initialization is not correct,click the question mark for more info!\")\r\n              return false\r\n            }\r\n          }\r\n        }\r\n        alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n        return true\r\n      }\r\n    }\r\n  \r\n   \r\n    render() {\r\n      const{Alignment,sequence1,sequence2,score_matrix} = this.props\r\n      const{dp_table} = this.state\r\n  \r\n      const title_list =sequence1.flat()\r\n      const subtable_title = title_list.map((sq1)=>\r\n        <th>{sq1}</th>\r\n      );\r\n  \r\n    \r\n      \r\n  \r\n      const table = dp_table.map((row, x) => \r\n        <tr>\r\n          <th>{sequence2[x]}</th>\r\n          {row.map((cell,y)=>\r\n          <td><input type=\"number\"\r\n          value = {dp_table[x][y]} \r\n          onChange={(e) => { this.handleTable(e.target.value,x,y)}}\r\n          min=\"-99\" max=\"99\" disabled = {x === 0 || y === 0 ? false:true} required/></td>\r\n          )}\r\n  \r\n        </tr>\r\n  \r\n  \r\n      );\r\n  \r\n      return (\r\n        <div className=\"App\">\r\n          <h3>Step2: Initialize the DP table for</h3>\r\n          <h2> {Alignment}</h2>\r\n          <h5>Consult the base case and the edge cases from the recurrence and correspond the values to the table.</h5>\r\n          <div className = \"divider_1\">\r\n          <Recurrence Alignment = {Alignment}/>\r\n          <form onSubmit = {(event) => { \r\n            console.log(event.target.value);\r\n            event.preventDefault(); \r\n            if(this.check())\r\n              this.props.submit_initialization()\r\n             }}>\r\n          <table>\r\n            <tr>\r\n            {subtable_title}\r\n            </tr>\r\n            {table}\r\n          </table>\r\n          <input type = \"submit\" className = \"submit-button\"/>\r\n          </form>\r\n          </div>\r\n  \r\n        </div>\r\n      \r\n       \r\n  \r\n        \r\n      );\r\n    }\r\n  }\r\n\r\nexport default InitializeTable;","import { TimelineMax } from \"gsap/all\";\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass DirectionAnim extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      // reference to the DOM node\r\n      this.myElement = null;\r\n      // reference to the animation\r\n      this.myTween = null;\r\n    }\r\n  \r\n    componentDidMount(){\r\n      var val = this.props.val/5\r\n      var max = this.props.max/5\r\n      // use the node ref to create the animation\r\n      this.myTween = new TimelineMax({ repeat:-1})\r\n      .from(this.myElement, val, {})\r\n      .to(this.myElement, 0.2, { color: \"red\" }) \r\n      .to(this.myElement, max-val, {}) \r\n      .to(this.myElement, 0.2, { color: \"white\" }) \r\n  \r\n    }\r\n  \r\n    render(){\r\n      return( \r\n        <div className=\"box\">\r\n        {/* <button  onClick={() => this.myTween.play()}> Play </button> */}\r\n        <div ref={div => this.myElement = div} > {this.props.val}  </div>\r\n        </div>);\r\n    }\r\n  }\r\n\r\nexport default DirectionAnim;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Recurrence from './Recurrence.js'\r\nimport DirectionAnim from './DirectionAnim.js'\r\n\r\n\r\nclass SelectDirection extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        idx:Math.floor(Math.random()*5)\r\n      };\r\n  }\r\n  \r\n  handleSelect = (direction) =>{\r\n      if(direction === \"Right Down\" || direction === \"Down Right\"){\r\n          alert(\"Great, you got it correct! For dynamic programming, you should always start from the base case and go out the opposite direction as the recursion \")\r\n          this.props.submit_direction()\r\n        }\r\n\r\n      else{\r\n          alert(\"You are not correct. Click the question mark to see more info\")\r\n      }\r\n\r\n  }\r\n   \r\n    render() {\r\n      const{Alignment,sequence1,sequence2,DownRight,RightDown,UpLeft,LeftUp,RightUp,UpRight,DownLeft,LeftDown} = this.props\r\n      const{dp_table} = this.state\r\n  \r\n   \r\n  \r\n      const LeftDown_table = LeftDown.map((row, x) => \r\n      <tr>\r\n        {row.map((cell,y)=>\r\n        <td>\r\n        <DirectionAnim val = {LeftDown[x][y]} max = {LeftDown.length * LeftDown[0].length}/>\r\n       </td>\r\n        )}\r\n      </tr>\r\n    );\r\n  \r\n  \r\n      const DownLeft_table = DownLeft.map((row, x) => \r\n      <tr>\r\n         \r\n        {row.map((cell,y)=>\r\n        <td>\r\n        <DirectionAnim val = {DownLeft[x][y]} max = {DownLeft.length * DownLeft[0].length}/>\r\n       </td>\r\n        )}\r\n      </tr>\r\n    );\r\n  \r\n      const UpRight_table = UpRight.map((row, x) => \r\n      <tr>\r\n         \r\n        {row.map((cell,y)=>\r\n        <td>\r\n        <DirectionAnim val = {UpRight[x][y]} max = {UpRight.length * UpRight[0].length}/>\r\n       </td>\r\n        )}\r\n      </tr>\r\n    );\r\n  \r\n      const RightUp_table = RightUp.map((row, x) => \r\n      <tr>\r\n         \r\n        {row.map((cell,y)=>\r\n        <td>\r\n        <DirectionAnim val = {RightUp[x][y]} max = {RightUp.length * RightUp[0].length}/>\r\n       </td>\r\n        )}\r\n      </tr>\r\n    );\r\n  \r\n      const LeftUp_table = LeftUp.map((row, x) => \r\n      <tr>\r\n         \r\n        {row.map((cell,y)=>\r\n        <td>\r\n        <DirectionAnim val = {LeftUp[x][y]} max = {LeftUp.length * LeftUp[0].length}/>\r\n       </td>\r\n        )}\r\n      </tr>\r\n    );\r\n     \r\n      const DownRight_table = DownRight.map((row, x) => \r\n        <tr>\r\n           \r\n          {row.map((cell,y)=>\r\n          <td>\r\n          <DirectionAnim val = {DownRight[x][y]} max = {DownRight.length * DownRight[0].length}/>\r\n         </td>\r\n          )}\r\n        </tr>\r\n      );\r\n  \r\n      const RightDown_table = RightDown.map((row, x) => \r\n      <tr>\r\n         \r\n        {row.map((cell,y)=>\r\n        <td>\r\n        <DirectionAnim val = {RightDown[x][y]} max = {RightDown.length * RightDown[0].length}/>\r\n       </td>\r\n        )}\r\n      </tr>\r\n    );\r\n  \r\n    const UpLeft_table = UpLeft.map((row, x) => \r\n    <tr>\r\n       \r\n      {row.map((cell,y)=>\r\n      <td>\r\n      <DirectionAnim val = {UpLeft[x][y]} max = {UpLeft.length * UpLeft[0].length}/>\r\n     </td>\r\n      )}\r\n    </tr>\r\n    );\r\n  \r\n    var table_list = [UpLeft_table,LeftUp_table,RightUp_table,UpRight_table,DownLeft_table,LeftDown_table]\r\n    \r\n    \r\n      return (\r\n        <div className=\"App\">\r\n          <h3>Step3: Select the direction to fill out the table</h3>\r\n          <h2> {Alignment}</h2>\r\n          <h5>Consult the recurrence and the base case to find the flow to fill the table.</h5>\r\n          <Recurrence Alignment = {Alignment}/>\r\n          <div className = \"divider\">\r\n         \r\n  \r\n  \r\n  \r\n          <div className = \"divider_1\">\r\n          <table className = \"directionTable\">\r\n            {RightDown_table}\r\n          </table>\r\n          <button onClick = {() => this.handleSelect(\"Right Down\")}>Select</button>\r\n          </div>\r\n  \r\n          <div className = \"divider_1\">\r\n          <table className = \"directionTable\">\r\n            {table_list[this.state.idx]}\r\n          </table>\r\n          <button onClick = {() => this.handleSelect(\"wrong\")} >Select</button>\r\n          </div>\r\n  \r\n  \r\n          <div className = \"divider_1\">\r\n          <table className = \"directionTable\">\r\n            {DownRight_table}\r\n          </table>\r\n          <button onClick = {() => this.handleSelect(\"Down Right\")}  >Select</button>\r\n          </div>\r\n  \r\n      \r\n          </div>\r\n  \r\n        </div>\r\n      \r\n       \r\n  \r\n        \r\n      );\r\n    }\r\n  }\r\n\r\nexport default SelectDirection;","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Recurrence from './Recurrence.js'\r\n\r\nclass FinishTable extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        dp_table:[]\r\n      };\r\n  }\r\n  \r\n  static getDerivedStateFromProps(props, state){\r\n   if(props.dp_table !== state.dp_table){\r\n     return {dp_table:props.dp_table};\r\n   }\r\n  }\r\n  \r\n    componentDidMount() {\r\n      const{dp_table} = this.props\r\n      this.setState({\r\n        dp_table:dp_table\r\n      })\r\n    }\r\n  \r\n    handleTable = (val,x,y)=>{\r\n      var new_table = this.state.dp_table\r\n      new_table[x][y] = parseInt(val)\r\n      this.setState({\r\n        dp_table:new_table\r\n      })\r\n    }\r\n  \r\n    check = () =>{\r\n      const{Alignment,dp_table_global,dp_table_local,dp_table_fitting} = this.props\r\n      const{dp_table} = this.state\r\n      var i,j\r\n      if(Alignment === \"Global Alignment\"){\r\n        for(j = 0; j<dp_table.length; j ++ ){\r\n          for(i=0; i<dp_table[j].length; i++){\r\n            if(dp_table[j][i] !== dp_table_global[j][i]){\r\n              alert(\"Your table is not correct,click the question mark for more info!\")\r\n              return false\r\n            }\r\n          }\r\n        }\r\n        alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n        return true\r\n      }\r\n  \r\n      if(Alignment === \"Fitting Alignment\"){\r\n        for(j = 0; j<dp_table.length; j ++ ){\r\n          for(i=0; i<dp_table[j].length; i++){\r\n            if(dp_table[j][i] !== dp_table_fitting[j][i]){\r\n              alert(\"Your table is not correct,click the question mark for more info!\")\r\n              return false\r\n            }\r\n          }\r\n        }\r\n        alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n        return true\r\n      }\r\n  \r\n      if(Alignment === \"Local Alignment\"){\r\n        for(j = 0; j<dp_table.length; j ++ ){\r\n          for(i=0; i<dp_table[j].length; i++){\r\n            if(dp_table[j][i] !== dp_table_local[j][i]){\r\n              alert(\"Your table is not correct,click the question mark for more info!\")\r\n              return false\r\n            }\r\n          }\r\n        }\r\n        alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n        return true\r\n      }\r\n    }\r\n  \r\n   \r\n    render() {\r\n      const{Alignment,sequence1,sequence2} = this.props\r\n      const{dp_table_global,dp_table_local,dp_table_fitting} = this.props\r\n      const{dp_table} = this.state\r\n      var new_table\r\n\r\n      if(Alignment === \"Global Alignment\")\r\n        new_table = dp_table_global\r\n      if(Alignment === \"Fitting Alignment\")\r\n        new_table = dp_table_fitting\r\n      if(Alignment === \"Local Alignment\")\r\n        new_table = dp_table_local\r\n\r\n      const title_list =sequence1.flat()\r\n      const subtable_title = title_list.map((sq1)=>\r\n        <th>{sq1}</th>\r\n      );\r\n  \r\n    \r\n      \r\n  \r\n      const table = dp_table.map((row, x) => \r\n        <tr>\r\n          <th>{sequence2[x]}</th>\r\n          {row.map((cell,y)=>\r\n          <td className = {dp_table[x][y] === new_table[x][y] ? \"green\":\"\" }><input type=\"number\"\r\n          value = {dp_table[x][y]} \r\n          onChange={(e) => { this.handleTable(e.target.value,x,y)}}\r\n          min=\"-99\" max=\"99\" readonly = {x === 0 || y === 0 ? \"readonly\":false} required/></td>\r\n          )}\r\n  \r\n        </tr>\r\n  \r\n  \r\n      );\r\n  \r\n      return (\r\n        <div className=\"App\">\r\n          <h3>Step4: Complete the DP table for</h3>\r\n          <h2> {Alignment}</h2>\r\n          <h5>Consult the recurrence and the direction you just chose,finish the table.</h5>\r\n          <div className = \"divider_1\">\r\n          <Recurrence Alignment = {Alignment}/>\r\n          <form onSubmit = {(event) => { \r\n            console.log(event.target.value);\r\n            event.preventDefault(); \r\n            if(this.check())\r\n              this.props.submit_finish()\r\n             }}>\r\n          <table>\r\n            <tr>\r\n            {subtable_title}\r\n            </tr>\r\n            {table}\r\n          </table>\r\n          <input type = \"submit\" className = \"submit-button\"/>\r\n          </form>\r\n          </div>\r\n  \r\n        </div>\r\n      \r\n       \r\n  \r\n        \r\n      );\r\n    }\r\n  }\r\n\r\nexport default FinishTable;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nclass BacktraceAnim extends Component {\r\n    \r\n\r\n    render(){\r\n      return( \r\n        <div className=\"box\">\r\n        <div className = {this.props.clickable ? \"yellow\":\"\"}> <div className = {this.props.clicked ? \"green\":\"\"}>{this.props.val} </div> </div>\r\n        </div>);\r\n    }\r\n  }\r\n\r\nexport default  BacktraceAnim","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport Recurrence from './Recurrence.js'\r\nimport BacktraceAnim from \"./BacktraceAnim.js\"\r\n\r\n\r\nclass BackTrace extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        dp_table:[],\r\n        BackTrace:[],\r\n        clicked:[],\r\n        clickable:[],\r\n        empty:[],\r\n        first_click:true,\r\n        last_clicked:null,\r\n        first_clicked:null\r\n      };\r\n  }\r\n  \r\n  static getDerivedStateFromProps(props, state){\r\n   if(props.dp_table !== state.dp_table){\r\n     let clicked = Array(props.dp_table.length).fill(null).map(()=>Array(props.dp_table[0].length).fill(null));\r\n     let BackTrace = Array(props.dp_table.length).fill(null).map(()=>Array(props.dp_table[0].length).fill(null));\r\n     let clickable = Array(props.dp_table.length).fill(null).map(()=>Array(props.dp_table[0].length).fill(null));\r\n     let empty = Array(props.dp_table.length).fill(null).map(()=>Array(props.dp_table[0].length).fill(null));\r\n     return {dp_table:props.dp_table,\r\n             clicked:clicked,\r\n             BackTrace:BackTrace,\r\n             clickable:clickable,\r\n             empty:empty,\r\n    };\r\n   }\r\n  }\r\n  \r\n    componentDidMount() {\r\n      const{dp_table} = this.props\r\n      this.setState({\r\n        dp_table:dp_table\r\n      })\r\n    }\r\n\r\n    handleRestart = () =>{\r\n        const{empty} = this.state\r\n        this.setState({\r\n             clicked:JSON.parse(JSON.stringify(empty)),\r\n             BackTrace:JSON.parse(JSON.stringify(empty)),\r\n             clickable:JSON.parse(JSON.stringify(empty)),\r\n             first_click:true,\r\n             last_clicked:null\r\n        })\r\n    }\r\n  \r\n    handleClick = (x,y)=>{\r\n      console.log(x,y)\r\n      const{first_click,last_clicked,first_clicked} = this.state\r\n      if(first_click){\r\n        this.setState({\r\n            first_clicked:[x,y]\r\n        })\r\n      }\r\n      if (this.state.clickable[x][y] || first_click){\r\n      var clicked = this.state.clicked\r\n      var clickable = this.state.clickable\r\n      var BackTrace = this.state.BackTrace\r\n      clicked[x][y] = true\r\n      if(last_clicked){\r\n        BackTrace[last_clicked[0]][last_clicked[1]] = [x,y]\r\n        if(last_clicked[0] >= 1)\r\n           clickable[last_clicked[0]-1][last_clicked[1]] = false\r\n        if(last_clicked[1] >= 1)\r\n           clickable[last_clicked[0]][last_clicked[1]-1] = false\r\n       if(last_clicked[0]>=1 && last_clicked[1]>=1)\r\n           clickable[last_clicked[0]-1][last_clicked[1]-1] = false\r\n       }\r\n      if(x >= 1)\r\n        clickable[x-1][y] = true\r\n      if(y >= 1)\r\n        clickable[x][y-1] = true\r\n      if(x>=1 && y>=1)\r\n        clickable[x-1][y-1] = true\r\n      \r\n      this.setState({\r\n        clicked:clicked,\r\n        clickable:clickable,\r\n        first_click:false,\r\n        last_clicked:[x,y]\r\n      })\r\n     }\r\n    }\r\n  \r\n    check = () =>{\r\n      const{Alignment,backtrace_fitting,backtrace_global,backtrace_local,dp_table} = this.props\r\n      const{BackTrace,clicked,first_clicked,last_clicked} = this.state\r\n      var i,j\r\n      if(Alignment === \"Global Alignment\"){\r\n        for(j = 0; j<BackTrace.length; j ++ ){\r\n          for(i=0; i<BackTrace[j].length; i++){\r\n\r\n            if( BackTrace[j][i] !== null && !backtrace_global[j][i].some(array1 => array1.length === BackTrace[j][i].length && array1.every(function(value, index) { return value === BackTrace[j][i][index]}))){\r\n              alert(\"Your table is not correct,click the question mark for more info!\")\r\n              console.log(backtrace_global[j][i],BackTrace[j][i])\r\n              return false\r\n            }\r\n\r\n            if( i===0 && j===0 && !clicked[j][i]){\r\n              alert(\"Your table is not correct,click the question mark for more info!\")\r\n              return false\r\n            }\r\n\r\n            \r\n            if( i===BackTrace[j].length-1 && j===BackTrace.length-1 && !clicked[j][i]){\r\n                alert(\"Your table is not correct,click the question mark for more info!\")\r\n                return false\r\n              }\r\n\r\n          }\r\n        }\r\n        alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n        return true\r\n      }\r\n  \r\n      if(Alignment === \"Fitting Alignment\"){\r\n        var flag = false\r\n        var max = -100\r\n        var max_i,max_j\r\n        for(j = 0; j<BackTrace.length; j ++ ){\r\n            for(i=0; i<BackTrace[j].length; i++){\r\n  \r\n              if( BackTrace[j][i] !== null && !backtrace_fitting[j][i].some(array1 => array1.length === BackTrace[j][i].length && array1.every(function(value, index) { return value === BackTrace[j][i][index]}))){\r\n                alert(\"Your table is not correct,click the question mark for more info!\")\r\n                console.log(backtrace_fitting[j][i],BackTrace[j][i])\r\n                return false\r\n              }\r\n  \r\n              if( j===0 && clicked[j][i]){\r\n                flag = true\r\n              }\r\n  \r\n              \r\n              if( j===BackTrace.length-1 ){\r\n                  if(dp_table[j][i] > max){\r\n                      max = dp_table[j][i]\r\n                  }\r\n                }\r\n  \r\n            }\r\n          }\r\n          if(flag && dp_table[first_clicked[0]][first_clicked[1]] === max){\r\n            alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n            return true\r\n          }\r\n          else{\r\n            alert(\"Your table is not correct,click the question mark for more info!\")\r\n            return false\r\n          }\r\n      }\r\n  \r\n      if(Alignment === \"Local Alignment\"){\r\n         flag = false\r\n         max = -100\r\n        for(j = 0; j<BackTrace.length; j ++ ){\r\n            for(i=0; i<BackTrace[j].length; i++){\r\n  \r\n              if( BackTrace[j][i] !== null && !backtrace_local[j][i].some(array1 => array1.length === BackTrace[j][i].length && array1.every(function(value, index) { return value === BackTrace[j][i][index]}))){\r\n                alert(\"Your table is not correct,click the question mark for more info!\")\r\n                console.log(backtrace_local[j][i],BackTrace[j][i])\r\n                return false\r\n              }\r\n  \r\n              if(dp_table[j][i] > max){\r\n                      max = dp_table[j][i]\r\n              }\r\n  \r\n            }\r\n          }\r\n          if(dp_table[last_clicked[0]][last_clicked[1]] === 0 && dp_table[first_clicked[0]][first_clicked[1]] === max){\r\n            alert(\"Awesome! You got it correct! Now you can click Next button to proceed\")\r\n            return true\r\n          }\r\n          else{\r\n            alert(\"Your table is not correct,click the question mark for more info!\")\r\n            return false\r\n          }\r\n      }\r\n    }\r\n    \r\n    handleSubmit = () =>{\r\n        if(this.check())\r\n            this.props.submit_backtrace(this.state.BackTrace,this.state.clicked,this.state.first_clicked,this.state.last_clicked)\r\n    }\r\n  \r\n    \r\n   \r\n    render() {\r\n      const{Alignment,sequence1,sequence2} = this.props\r\n      const{dp_table,clickable,clicked} = this.state\r\n  \r\n      const title_list =sequence1.flat()\r\n      const subtable_title = title_list.map((sq1)=>\r\n        <th>{sq1}</th>\r\n      );\r\n  \r\n    \r\n      \r\n  \r\n      const table = dp_table.map((row, x) => \r\n        <tr>\r\n          <th>{sequence2[x]}</th>\r\n          {row.map((cell,y)=>\r\n          <td onClick = {() => this.handleClick(x,y)}><BacktraceAnim clicked = {clicked[x][y]} clickable = {clickable[x][y]} val = {dp_table[x][y]}\r\n                /></td>\r\n          )}\r\n  \r\n        </tr>\r\n  \r\n  \r\n      );\r\n  \r\n      return (\r\n        <div className=\"App\">\r\n          <h3>Step5: Perform BackTrace on the dp table</h3>\r\n          <h2> {Alignment}</h2>\r\n          <h5>First click the final score of the alignment, then click the yellow area to backtrace step by step</h5>\r\n          <div className = \"divider_1\">\r\n          <Recurrence Alignment = {Alignment}/>\r\n          <table>\r\n            <tr>\r\n            {subtable_title}\r\n            </tr>\r\n            {table}\r\n          </table>\r\n           \r\n          <button onClick = {this.handleRestart}>Restart</button>\r\n          <button onClick = {this.handleSubmit}>Submit</button>\r\n          </div>\r\n  \r\n        </div>\r\n      \r\n       \r\n  \r\n        \r\n      );\r\n    }\r\n  }\r\n\r\nexport default BackTrace;","\r\nimport React, { Component } from 'react';\r\nimport { TimelineMax } from \"gsap/all\";\r\nimport './App.css';\r\nimport Recurrence from './Recurrence.js'\r\nimport BacktraceAnim from \"./BacktraceAnim.js\"\r\n\r\nclass FinalAlignment extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.myElement = null;\r\n      // reference to the animation\r\n      this.myTween = null;\r\n      this.state = {\r\n          Alignment1:Array(50).fill(\"\"),\r\n          Alignment2:Array(50).fill(\"\"),\r\n          finished:false\r\n         \r\n      };\r\n  }\r\n\r\n  componentDidMount(){\r\n    // use the node ref to create the animation\r\n    this.myTween = new TimelineMax({repeat:-1})\r\n    .from(this.myElement, 2, {rotation:\"+=360\"})\r\n    .to(this.myElement, 2, {fontSize:100})\r\n\r\n  }\r\n\r\n  handleAlign = (val,x,y)=>{\r\n      const{Alignment1,Alignment2} = this.state\r\n      var new_alignment\r\n      if(x===0){\r\n        new_alignment = Alignment1\r\n        new_alignment[y] = val\r\n        this.setState({\r\n            Alignment1:new_alignment\r\n        })\r\n      }\r\n\r\n      if(x===1){\r\n        new_alignment = Alignment2\r\n        new_alignment[y] = val\r\n        this.setState({\r\n            Alignment2:new_alignment\r\n        })\r\n      }\r\n\r\n  }\r\n\r\n  seqencecheck(sequence1,sequence2){\r\n    var i\r\n    var j \r\n    console.log(sequence1,sequence2)\r\n    for(i = 0; i<sequence1.length; i++){\r\n\r\n      if(sequence1[i] !== sequence2[i]){\r\n        console.log(sequence1[i],sequence2[j])\r\n        return false\r\n      }\r\n    \r\n       \r\n      }\r\n\r\n      return true\r\n\r\n    }\r\n   \r\n  \r\n\r\n\r\n\r\n  check = () =>{\r\n    const{ans_Alignment1,ans_Alignment2} = this.props\r\n    const{Alignment1,Alignment2} = this.state\r\n    \r\n    if(this.seqencecheck(ans_Alignment1,Alignment1) && this.seqencecheck(ans_Alignment2,Alignment2)){\r\n     \r\n      alert(\"Congrats!!!!\")\r\n      return true\r\n    }\r\n\r\n    if(this.seqencecheck(ans_Alignment1,Alignment2) && this.seqencecheck(ans_Alignment2,Alignment1)){\r\n      \r\n      alert(\"Congrats!!!!\")\r\n      return true\r\n    }\r\n\r\n    alert(\"Wrong!\")\r\n    return false\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  handleSubmit = () =>{\r\n    if(this.check()){\r\n      // this.props.submitFinal()\r\n      console.log(\"checked\")\r\n      this.setState({\r\n        finished:true\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  \r\n   \r\n    render() {\r\n      const{Alignment,ans_Alignment1,sequence1,sequence2} = this.props\r\n      const{dp_table,clicked} = this.props\r\n  \r\n      const title_list =sequence1.flat()\r\n      const subtable_title = title_list.map((sq1)=>\r\n        <th>{sq1}</th>\r\n      );\r\n\r\n\r\n      const AlignmentTable = ans_Alignment1.map((cell,idx)=>\r\n        <div className = \"Alignment\">\r\n        <select  onChange={(e) => {this.handleAlign(e.target.value,0,idx)}}>\r\n        <option>  </option>\r\n        <option> C </option>\r\n        <option> A </option>\r\n        <option> G </option>\r\n        <option> T </option>\r\n        <option>---</option>\r\n        </select>\r\n\r\n        <select  onChange={(e) => {this.handleAlign(e.target.value,1,idx)}}>\r\n        <option>  </option>\r\n        <option> C </option>\r\n        <option> A </option>\r\n        <option> G </option>\r\n        <option> T </option>\r\n        <option>---</option>\r\n        </select>\r\n        </div>\r\n      )\r\n  \r\n    \r\n      \r\n  \r\n      const table = clicked.map((row, x) => \r\n        <tr>\r\n          <th>{sequence2[x]}</th>\r\n          {row.map((cell,y)=>\r\n          <td><BacktraceAnim clicked = {clicked[x][y]} val = {dp_table[x][y]}/></td>\r\n          )}\r\n  \r\n        </tr>\r\n  \r\n  \r\n      );\r\n  \r\n      return (\r\n        <div className=\"App\">\r\n         <div  className= {this.state.finished ? \"\":\"hidden\"} ref={div => this.myElement = div} > <h1>Great Work!!</h1>  </div>\r\n         <div  className= {!this.state.finished ? \"\":\"hidden\"}>\r\n          <h3>Step6: Final Alignment</h3>\r\n          <h2> {Alignment}</h2>\r\n          <h5>Give the final Alignment according to the BackTrace</h5>\r\n          <div className = \"divider_1\">\r\n          <div className = \"divider\">\r\n          <Recurrence Alignment = {Alignment}/>\r\n         \r\n          </div>\r\n         <div className = \"Alignmentdivider_1\">   \r\n          <table>\r\n            <tr>\r\n            {subtable_title}\r\n            </tr>\r\n            {table}\r\n          </table>\r\n            <div>\r\n            <div className = \"Alignmentdivider\">   \r\n            {AlignmentTable}\r\n            </div>\r\n            <button onClick = {this.handleSubmit}>Submit</button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n\r\n          </div>\r\n        \r\n          </div>\r\n          </div>\r\n  \r\n        </div>\r\n      \r\n       \r\n  \r\n        \r\n      );\r\n    }\r\n  }\r\n\r\nexport default FinalAlignment;","import React, { Component } from 'react';\r\nimport InputSequence from './InputSequence.js'\r\nimport SelectRecurence from './SelectRecurence.js'\r\nimport InitializeTable from './InitializeTable.js'\r\nimport SelectDirection from './SelectDirection.js'\r\nimport FinishTable from './FinishTable.js'\r\nimport BackTrace from './BackTrace.js'\r\nimport FinalAlignment from './FinalAlignment.js'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Alignment : null,\r\n      sequence1 : [],\r\n      sequence2 : [],\r\n      dp_table:[],\r\n      dp_table_global:[],\r\n      dp_table_fitting:[],\r\n      dp_table_local:[],\r\n      backtrace_fitting:[],\r\n      backtrace_global:[],\r\n      backtrace_local:[],\r\n      DownRight:[],\r\n      RightDown:[],\r\n      UpLeft:[],\r\n      LeftUp:[],\r\n      RightUp:[],\r\n      UpRight:[],\r\n      DownLeft:[],\r\n      LeftDown:[],\r\n      BackTrace:[],\r\n      clicked:[],\r\n      first_clicked:[],\r\n      last_clicked:[],\r\n      Alignment1:[],\r\n      Alignment2:[],\r\n      score_matrix : null,\r\n      current_step:0,\r\n      allowed_step:0,\r\n    };\r\n}\r\n\r\n\r\n  GetAlignment = (first_clicked,last_clicked,clicked) =>{\r\n    var Alignment1 = []\r\n    var Alignment2 = []\r\n    var current_click = []\r\n    const{sequence1,sequence2} = this.state\r\n    current_click = last_clicked\r\n    while(current_click[0] !== first_clicked[0] || current_click[1] !== first_clicked[1]){\r\n      console.log(current_click)\r\n      if(clicked[current_click[0]+1][current_click[1]+1]){\r\n        //   match/mismatch\r\n        Alignment1.push(sequence1[current_click[1]+2])\r\n        Alignment2.push(sequence2[current_click[0]+1])\r\n        current_click = [current_click[0]+1,current_click[1]+1]\r\n      }\r\n\r\n      else if(clicked[current_click[0]][current_click[1]+1]){\r\n        //   deletion\r\n        Alignment1.push(sequence1[current_click[1]+2])\r\n        Alignment2.push(\"---\")\r\n        current_click = [current_click[0],current_click[1]+1]\r\n      }\r\n\r\n      else if(clicked[current_click[0]+1][current_click[1]]){\r\n        //   insertion\r\n        Alignment1.push(\"---\")\r\n        Alignment2.push(sequence2[current_click[0]+1])\r\n        current_click = [current_click[0]+1,current_click[1]]\r\n      }\r\n\r\n      console.log(\"Alignment1\", Alignment1)\r\n      console.log(\"Alignment2\", Alignment2)\r\n\r\n\r\n    }\r\n\r\n    this.setState({\r\n      Alignment1:Alignment1,\r\n      Alignment2:Alignment2\r\n    })\r\n  }\r\n  MapDirections = () =>{\r\n    const dp_table = Array(5).fill(null).map(()=>Array(4).fill(null));\r\n    let DownRight = JSON.parse(JSON.stringify(dp_table));\r\n    let RightDown = JSON.parse(JSON.stringify(dp_table));\r\n    let UpLeft = JSON.parse(JSON.stringify(dp_table));\r\n    let LeftUp = JSON.parse(JSON.stringify(dp_table));\r\n    let RightUp = JSON.parse(JSON.stringify(dp_table));\r\n    let UpRight = JSON.parse(JSON.stringify(dp_table));\r\n    let DownLeft = JSON.parse(JSON.stringify(dp_table));\r\n    let LeftDown = JSON.parse(JSON.stringify(dp_table));\r\n    var i,j\r\n    var n = 0\r\n    for(j = 0; j<RightDown.length; j ++ ){\r\n      for(i=0; i<RightDown[0].length; i++){\r\n        RightDown[j][i] = n\r\n        n += 1\r\n      }}\r\n    n= 0\r\n    for(i = 0; i<DownRight[0].length; i ++ ){\r\n      for(j=0; j<DownRight.length; j++){\r\n        DownRight[j][i] = n\r\n        n += 1\r\n      }}\r\n    n= 0\r\n    for(i = UpLeft[0].length-1; i>=0; i -- ){\r\n      for(j=UpLeft.length-1; j>=0; j--){\r\n        UpLeft[j][i] = n\r\n        n += 1\r\n      }}\r\n    n= 0\r\n    for(j=LeftUp.length-1; j>=0; j--){\r\n      for( i = LeftUp[0].length-1; i>=0; i -- ){\r\n        LeftUp[j][i] = n\r\n        n += 1\r\n      }}\r\n    n=0\r\n    for(j=LeftUp.length-1; j>=0; j--){\r\n      for(i=0; i<RightUp[0].length; i++){\r\n        RightUp[j][i] = n\r\n        n += 1\r\n      }} \r\n    n=0\r\n    for(i=0; i<UpRight[0].length; i++){\r\n      for(j=UpRight.length-1; j>=0; j-- ){\r\n        UpRight[j][i] = n\r\n        n += 1\r\n      }} \r\n    n=0\r\n    for(i = DownLeft[0].length-1; i>=0; i --){\r\n      for(j=0; j<DownLeft.length; j++ ){\r\n        DownLeft[j][i] = n\r\n        n += 1\r\n      }} \r\n    n=0\r\n    for(j=0; j<LeftDown.length; j++ ){\r\n      for(i = LeftDown[0].length-1; i>=0; i --){\r\n        LeftDown[j][i] = n\r\n        n += 1\r\n      }} \r\n    console.log(DownRight,RightDown,UpLeft,LeftUp,RightUp,UpRight,DownLeft,LeftDown)\r\n    this.setState({\r\n      DownRight,RightDown,UpLeft,LeftUp,RightUp,UpRight,DownLeft,LeftDown\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  GlobalAlignment = (dp_table,score_matrix,sequence1,sequence2) =>{\r\n    // console.log()\r\n    // deep copy\r\n    let global_dp_table = JSON.parse(JSON.stringify(dp_table));\r\n    var i,j;\r\n    var backtrace = JSON.parse(JSON.stringify(dp_table));\r\n    for(j = 0; j<global_dp_table.length; j ++ ){\r\n      for(i=0; i<global_dp_table[j].length; i++){\r\n        if(i === 0 && j === 0){\r\n          global_dp_table[j][i] = 0\r\n          backtrace[j][i] = [[0]]\r\n        }\r\n        //deletion\r\n        if(i > 0){\r\n          if(global_dp_table[j][i] == null){\r\n            global_dp_table[j][i] =  global_dp_table[j][i-1] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j,i-1]]\r\n          }\r\n          else if(global_dp_table[j][i] < global_dp_table[j][i-1] + score_matrix[\"GAP\"]){\r\n            global_dp_table[j][i] =  global_dp_table[j][i-1] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j,i-1]]\r\n          }\r\n          else if(global_dp_table[j][i] === global_dp_table[j][i-1] + score_matrix[\"GAP\"]){\r\n            backtrace[j][i].push([j,i-1])\r\n\r\n          }\r\n          \r\n        } \r\n\r\n        if(j >0){\r\n          if(global_dp_table[j][i] == null){\r\n            global_dp_table[j][i] =  global_dp_table[j-1][i] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j-1,i]]\r\n          }\r\n          else if (global_dp_table[j][i] < global_dp_table[j-1][i] + score_matrix[\"GAP\"]){\r\n            global_dp_table[j][i] =  global_dp_table[j-1][i] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j-1,i]]          \r\n          }\r\n          else if(global_dp_table[j][i]  === global_dp_table[j-1][i] + score_matrix[\"GAP\"]){\r\n            backtrace[j][i].push([j-1,i])\r\n          }\r\n          \r\n        }\r\n\r\n        if(i>0 && j>0){\r\n          if(global_dp_table[j][i] < global_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]){            \r\n            global_dp_table[j][i] =  global_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]\r\n            backtrace[j][i] = [[j-1,i-1]]          \r\n          }\r\n          else if(global_dp_table[j][i] === global_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]){\r\n            backtrace[j][i].push([j-1,i-1])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(backtrace)\r\n\r\n    this.setState({\r\n      dp_table_global:global_dp_table,\r\n      backtrace_global:backtrace\r\n\r\n    })\r\n  }\r\n\r\n  FittingAlignment = (dp_table,score_matrix,sequence1,sequence2) =>{\r\n    // deep copy\r\n    let fitting_dp_table = JSON.parse(JSON.stringify(dp_table));\r\n    var i,j\r\n    var backtrace = JSON.parse(JSON.stringify(dp_table));\r\n    for(j = 0; j<fitting_dp_table.length; j ++ ){\r\n      for(i=0; i<fitting_dp_table[j].length; i++){\r\n        if(j === 0){\r\n          fitting_dp_table[j][i] = 0\r\n          backtrace[j][i] = [[0]]\r\n        }\r\n        //deletion\r\n        if(i>0 && j>0){\r\n          if(fitting_dp_table[j][i] == null){\r\n            fitting_dp_table[j][i] =  fitting_dp_table[j][i-1] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j,i-1]]\r\n          }\r\n          else if(fitting_dp_table[j][i] < fitting_dp_table[j][i-1] + score_matrix[\"GAP\"]){\r\n            fitting_dp_table[j][i] =  fitting_dp_table[j][i-1] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j,i-1]]            \r\n          }\r\n          else if(fitting_dp_table[j][i] === fitting_dp_table[j][i-1] + score_matrix[\"GAP\"]){\r\n            backtrace[j][i].push([j,i-1])            \r\n          }\r\n          \r\n        } \r\n\r\n        if(j>0){\r\n          if(fitting_dp_table[j][i] == null){\r\n            fitting_dp_table[j][i] =  fitting_dp_table[j-1][i] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j-1,i]]\r\n          }\r\n          else if (fitting_dp_table[j][i] < fitting_dp_table[j-1][i] + score_matrix[\"GAP\"]){\r\n            fitting_dp_table[j][i] =  fitting_dp_table[j-1][i] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j-1,i]]\r\n          }\r\n          else if(fitting_dp_table[j][i] === fitting_dp_table[j-1][i] + score_matrix[\"GAP\"]){\r\n            backtrace[j][i].push([j-1,i])\r\n          }\r\n          \r\n        }\r\n\r\n        if(i>0 && j>0){\r\n          if(fitting_dp_table[j][i] < fitting_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]){\r\n            \r\n            fitting_dp_table[j][i] =  fitting_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]\r\n            backtrace[j][i] = [[j-1,i-1]]\r\n            \r\n          }\r\n          else if(fitting_dp_table[j][i] === fitting_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]){\r\n            backtrace[j][i].push([j-1,i-1])\r\n\r\n          }\r\n        \r\n         }\r\n\r\n      }\r\n    }\r\n    console.log(backtrace)\r\n    this.setState({\r\n      dp_table_fitting:fitting_dp_table,\r\n      backtrace_fitting:backtrace\r\n\r\n    })\r\n  }\r\n\r\n  LocalAlignment = (dp_table,score_matrix,sequence1,sequence2) =>{\r\n    // deep copy\r\n    let local_dp_table = JSON.parse(JSON.stringify(dp_table));\r\n    var i,j\r\n    var backtrace = JSON.parse(JSON.stringify(dp_table));\r\n    for(j = 0; j<local_dp_table.length; j ++ ){\r\n      for(i=0; i<local_dp_table[j].length; i++){\r\n        local_dp_table[j][i] = 0\r\n        backtrace[j][i] = [[0]]\r\n        //deletion\r\n        if(i > 0){\r\n          if(local_dp_table[j][i] == null){\r\n            local_dp_table[j][i] =  local_dp_table[j][i-1] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j,i-1]]\r\n          }\r\n          else if(local_dp_table[j][i] < local_dp_table[j][i-1] + score_matrix[\"GAP\"]){\r\n            local_dp_table[j][i] =  local_dp_table[j][i-1] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j,i-1]]\r\n          }\r\n          else if(local_dp_table[j][i] === local_dp_table[j][i-1] + score_matrix[\"GAP\"]){\r\n            backtrace[j][i].push([j,i-1])\r\n          }\r\n        } \r\n\r\n        if(i>0 && j>0){\r\n          if(local_dp_table[j][i] == null){\r\n            local_dp_table[j][i] =  local_dp_table[j-1][i] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j-1,i]]\r\n          }\r\n          else if (local_dp_table[j][i] < local_dp_table[j-1][i] + score_matrix[\"GAP\"]){\r\n            local_dp_table[j][i] =  local_dp_table[j-1][i] + score_matrix[\"GAP\"]\r\n            backtrace[j][i] = [[j-1,i]]\r\n          }\r\n          else if(local_dp_table[j][i] === local_dp_table[j-1][i] + score_matrix[\"GAP\"]){\r\n            backtrace[j][i].push([j-1,i])\r\n\r\n          }\r\n          \r\n        }\r\n\r\n        if(i>0 && j>0){\r\n          if(local_dp_table[j][i] < local_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]){\r\n            \r\n            local_dp_table[j][i] =  local_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]\r\n            backtrace[j][i] = [[j-1,i-1]]\r\n            \r\n          }\r\n          else if(local_dp_table[j][i] < local_dp_table[j-1][i-1] + score_matrix[sequence1[i+1]+sequence2[j]]){\r\n            backtrace[j][i].push([j-1,i-1])\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(backtrace)\r\n    this.setState({\r\n      dp_table_local:local_dp_table,\r\n      backtrace_local:backtrace\r\n    })\r\n  }\r\n\r\n\r\n  handleNext = () =>{\r\n    const{current_step,allowed_step} = this.state\r\n    if(allowed_step > current_step){\r\n      const next_step = current_step + 1\r\n      this.setState({\r\n        current_step:next_step\r\n      })\r\n    }\r\n  }\r\n\r\n  handlePrev = () =>{\r\n    const{current_step} = this.state\r\n    if(current_step > 0){\r\n      const next_step = current_step - 1\r\n      this.setState({\r\n        current_step:next_step\r\n      })\r\n    }\r\n  }\r\n\r\n  submit_seqence = (sequence1,sequence2,score_matrix,Alignment) =>{\r\n    console.log(sequence1,sequence2,score_matrix,Alignment)\r\n    const{allowed_step} = this.state\r\n    var next_alloed_step = allowed_step\r\n    var dp_table = Array(sequence2.length).fill(null).map(()=>Array(sequence1.length-1).fill(null));\r\n    if(allowed_step < 1){\r\n      next_alloed_step = 1\r\n    }\r\n    this.GlobalAlignment(dp_table,score_matrix,sequence1,sequence2)\r\n    this.FittingAlignment(dp_table,score_matrix,sequence1,sequence2)\r\n    this.LocalAlignment(dp_table,score_matrix,sequence1,sequence2)\r\n    this.MapDirections(dp_table)\r\n    this.setState({\r\n      sequence1:sequence1,\r\n      sequence2:sequence2,\r\n      score_matrix:score_matrix,\r\n      Alignment:Alignment,\r\n      allowed_step:next_alloed_step,\r\n      dp_table:dp_table\r\n    })\r\n    alert(\"Sequence Inputs Submitted! Please click Next button to proceed!\")\r\n  }\r\n\r\n  submit_recurrence = () =>{\r\n    const{allowed_step} = this.state\r\n    var next_alloed_step = allowed_step\r\n    if(allowed_step < 2){\r\n      next_alloed_step = 2\r\n    }\r\n    this.setState({\r\n      allowed_step:next_alloed_step\r\n    })\r\n  }\r\n\r\n  submit_initialization = () =>{\r\n    const{allowed_step} = this.state\r\n    var next_alloed_step = allowed_step\r\n    if(allowed_step < 3){\r\n      next_alloed_step = 3\r\n    }\r\n    this.setState({\r\n      allowed_step:next_alloed_step\r\n    })\r\n  }\r\n\r\n  submit_direction = () =>{\r\n    const{allowed_step} = this.state\r\n    var next_alloed_step = allowed_step\r\n    if(allowed_step < 4){\r\n      next_alloed_step = 4\r\n    }\r\n    this.setState({\r\n      allowed_step:next_alloed_step\r\n    })\r\n  }\r\n\r\n\r\n  submit_finish = () =>{\r\n    const{allowed_step} = this.state\r\n    var next_alloed_step = allowed_step\r\n    if(allowed_step < 5){\r\n      next_alloed_step = 5\r\n    }\r\n    this.setState({\r\n      allowed_step:next_alloed_step\r\n    })\r\n  }\r\n\r\n  submit_backtrace = (BackTrace,clicked,first_clicked,last_clicked) =>{\r\n    const{allowed_step} = this.state\r\n    var next_alloed_step = allowed_step\r\n    if(allowed_step < 6){\r\n      next_alloed_step = 6\r\n    }\r\n    this.setState({\r\n      allowed_step:next_alloed_step,\r\n      BackTrace:BackTrace,\r\n      clicked:clicked,\r\n      first_clicked:first_clicked,\r\n      last_clicked:last_clicked\r\n    })\r\n    this.GetAlignment(first_clicked,last_clicked,clicked)\r\n  }\r\n  render() {\r\n    const{Alignment,sequence1,sequence2,score_matrix,current_step,allowed_step,\r\n      dp_table,dp_table_fitting,dp_table_global,dp_table_local,DownRight,\r\n      RightDown,UpLeft,LeftUp,RightUp,UpRight,DownLeft,LeftDown,\r\n      backtrace_fitting,backtrace_global,backtrace_local,clicked,\r\n      first_clicked,last_clicked,Alignment1,Alignment2\r\n    } = this.state\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n        \r\n        <button disabled = {current_step > 0 ? false:true} onClick = {this.handlePrev}>Back</button>\r\n\r\n       \r\n\r\n        <section className={ current_step === 0 ? '' : 'hidden'} >\r\n        <InputSequence submit_seqence = {this.submit_seqence}/>\r\n        </section>\r\n\r\n        \r\n          \r\n        <section className={ current_step === 1 ? '' : 'hidden'} >\r\n        <SelectRecurence Alignment = {Alignment} submit_recurrence = {this.submit_recurrence} />        \r\n        </section>\r\n\r\n        <section className={ current_step === 2 ? '' : 'hidden'} >\r\n        <InitializeTable Alignment = {Alignment} \r\n        dp_table = {dp_table} submit_recurrence = {this.submit_recurrence} \r\n        sequence1 = {sequence1} sequence2 = {sequence2} \r\n        dp_table_global = {dp_table_global} dp_table_fitting = {dp_table_fitting} dp_table_local = {dp_table_local}\r\n        score_matrix = {score_matrix} submit_initialization = {this.submit_initialization} />        \r\n        </section>\r\n\r\n        <section className={ current_step === 3 ? '' : 'hidden'} >\r\n        <SelectDirection Alignment = {Alignment} \r\n        dp_table = {dp_table} submit_recurrence = {this.submit_recurrence} \r\n        sequence1 = {sequence1} sequence2 = {sequence2}\r\n        DownRight = {DownRight} RightDown = {RightDown} UpLeft= {UpLeft}  LeftUp= {LeftUp}\r\n         RightUp= {RightUp} UpRight= {UpRight} DownLeft= {DownLeft} LeftDown= {LeftDown}\r\n         submit_direction = {this.submit_direction}\r\n         />        \r\n        </section>\r\n\r\n        <section className={ current_step === 4 ? '' : 'hidden'} >\r\n        <FinishTable Alignment = {Alignment} \r\n        dp_table = {dp_table} submit_recurrence = {this.submit_recurrence} \r\n        sequence1 = {sequence1} sequence2 = {sequence2} \r\n        dp_table_global = {dp_table_global} dp_table_fitting = {dp_table_fitting} dp_table_local = {dp_table_local}\r\n        score_matrix = {score_matrix} submit_finish = {this.submit_finish}  />        \r\n        </section>\r\n\r\n\r\n        \r\n        <section className={ current_step === 5 ? '' : 'hidden'} >\r\n        <BackTrace Alignment = {Alignment} \r\n        dp_table = {dp_table} submit_recurrence = {this.submit_recurrence} \r\n        sequence1 = {sequence1} sequence2 = {sequence2} \r\n        dp_table_global = {dp_table_global} dp_table_fitting = {dp_table_fitting} dp_table_local = {dp_table_local}\r\n        score_matrix = {score_matrix} \r\n        backtrace_fitting = {backtrace_fitting}\r\n        backtrace_global = {backtrace_global}\r\n        backtrace_local = {backtrace_local}\r\n        submit_backtrace = {this.submit_backtrace}  />        \r\n        </section>\r\n\r\n\r\n        <section className={ current_step === 6 ? '' : 'hidden'} >\r\n        <FinalAlignment Alignment = {Alignment} \r\n        dp_table = {dp_table} submit_recurrence = {this.submit_recurrence} \r\n        sequence1 = {sequence1} sequence2 = {sequence2} \r\n        dp_table_global = {dp_table_global} dp_table_fitting = {dp_table_fitting} dp_table_local = {dp_table_local}\r\n        score_matrix = {score_matrix} \r\n        backtrace_fitting = {backtrace_fitting}\r\n        backtrace_global = {backtrace_global}\r\n        backtrace_local = {backtrace_local}\r\n        submit_backtrace = {this.submit_backtrace}\r\n        first_clicked = {first_clicked}\r\n        last_clicked = {last_clicked}\r\n        clicked = {clicked}\r\n        ans_Alignment1 = {Alignment1}\r\n        ans_Alignment2 = {Alignment2}  />        \r\n        </section>\r\n      \r\n        \r\n  \r\n        <button disabled = {current_step < allowed_step ? false:true} onClick = {this.handleNext}>Next</button>\r\n\r\n\r\n\r\n\r\n\r\n        </header>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Global.e2fff51c.png\";","module.exports = __webpack_public_path__ + \"static/media/Fitting.edd622f2.png\";"],"sourceRoot":""}